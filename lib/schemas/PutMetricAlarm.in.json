{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "ActionsEnabled": {
                    "description": "Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.",
                    "type": "boolean"
                },
                "AlarmActions": {
                    "description": "<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>",
                    "items": {
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 5,
                    "type": "array"
                },
                "AlarmDescription": {
                    "description": "The description for the alarm.",
                    "maxLength": 1024,
                    "minLength": 0,
                    "type": "string"
                },
                "AlarmName": {
                    "description": "The name for the alarm. This name must be unique within your AWS account.",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                },
                "ComparisonOperator": {
                    "description": " The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.",
                    "enum": [
                        "GreaterThanOrEqualToThreshold",
                        "GreaterThanThreshold",
                        "LessThanThreshold",
                        "LessThanOrEqualToThreshold"
                    ],
                    "type": "string"
                },
                "DatapointsToAlarm": {
                    "description": "The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an \"M out of N\" alarm. In that case, this value is the M. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation\">Evaluating an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.",
                    "minimum": 1,
                    "type": "integer"
                },
                "Dimensions": {
                    "description": "The dimensions for the metric specified in <code>MetricName</code>.",
                    "items": {
                        "description": "Expands the identity of a metric.",
                        "properties": {
                            "Name": {
                                "description": "The name of the dimension.",
                                "maxLength": 255,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Value": {
                                "description": "The value representing the dimension measurement.",
                                "maxLength": 255,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "Name",
                            "Value"
                        ],
                        "type": "object"
                    },
                    "maxItems": 10,
                    "type": "array"
                },
                "EvaluateLowSampleCountPercentile": {
                    "description": "<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples\">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                },
                "EvaluationPeriods": {
                    "description": "<p>The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an \"M out of N\" alarm, this value is the N.</p> <p>An alarm's total current evaluation period can be no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>",
                    "minimum": 1,
                    "type": "integer"
                },
                "ExtendedStatistic": {
                    "description": "The percentile statistic for the metric specified in <code>MetricName</code>. Specify a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.",
                    "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
                    "type": "string"
                },
                "InsufficientDataActions": {
                    "description": "<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>",
                    "items": {
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 5,
                    "type": "array"
                },
                "MetricName": {
                    "description": "<p>The name for the metric associated with the alarm.</p> <p>If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you specify all this information in the <code>Metrics</code> array.</p>",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                },
                "Metrics": {
                    "description": "<p>An array of <code>MetricDataQuery</code> structures that enable you to create an alarm based on the result of a metric math expression. Each item in the <code>Metrics</code> array either retrieves a metric or performs a math expression.</p> <p>If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>, <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the <code>Metrics</code> array.</p>",
                    "items": {
                        "description": "<p>This structure is used in both <code>GetMetricData</code> and <code>PutMetricAlarm</code>. The supported use of this structure is different for those two operations.</p> <p>When used in <code>GetMetricData</code>, it indicates the metric data to return, and whether this call is just retrieving a batch set of data for one metric, or is performing a math expression on metric data. A single <code>GetMetricData</code> call can include up to 100 <code>MetricDataQuery</code> structures.</p> <p>When used in <code>PutMetricAlarm</code>, it enables you to create an alarm based on a metric math expression. Each <code>MetricDataQuery</code> in the array specifies either a metric to retrieve, or a math expression to be performed on retrieved metrics. A single <code>PutMetricAlarm</code> call can include up to 20 <code>MetricDataQuery</code> structures in the array. The 20 structures can include as many as 10 structures that contain a <code>MetricStat</code> parameter to retrieve a metric, and as many as 10 structures that contain the <code>Expression</code> parameter to perform a math expression. Any expression used in a <code>PutMetricAlarm</code> operation must return a single time series. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax\">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Some of the parameters of this structure also have different uses whether you are using this structure in a <code>GetMetricData</code> operation or a <code>PutMetricAlarm</code> operation. These differences are explained in the following parameter list.</p>",
                        "properties": {
                            "Expression": {
                                "description": "<p>The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the <code>Id</code> of the other metrics to refer to those metrics, and can also use the <code>Id</code> of other expressions to use the result of those expressions. For more information about metric math expressions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax\">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Within each MetricDataQuery object, you must specify either <code>Expression</code> or <code>MetricStat</code> but not both.</p>",
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Id": {
                                "description": "A short name used to tie this object to the results in the response. This name must be unique within a single call to <code>GetMetricData</code>. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.",
                                "maxLength": 255,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Label": {
                                "description": "A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch generates a default.",
                                "type": "string"
                            },
                            "MetricStat": {
                                "description": "<p>The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.</p> <p>Within one MetricDataQuery object, you must specify either <code>Expression</code> or <code>MetricStat</code> but not both.</p>",
                                "properties": {
                                    "Metric": {
                                        "description": "The metric to return, including the metric name, namespace, and dimensions.",
                                        "properties": {
                                            "Dimensions": {
                                                "description": "The dimensions for the metric.",
                                                "items": {
                                                    "description": "Expands the identity of a metric.",
                                                    "properties": {
                                                        "Name": {
                                                            "description": "The name of the dimension.",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "Value": {
                                                            "description": "The value representing the dimension measurement.",
                                                            "maxLength": 255,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Name",
                                                        "Value"
                                                    ],
                                                    "type": "object"
                                                },
                                                "maxItems": 10,
                                                "type": "array"
                                            },
                                            "MetricName": {
                                                "description": "The name of the metric. This is a required field.",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Namespace": {
                                                "description": "The namespace of the metric.",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "pattern": "[^:].*",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Period": {
                                        "description": "The period, in seconds, to use when retrieving the metric.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "Stat": {
                                        "description": "The statistic to return. It can include any CloudWatch statistic or extended statistic.",
                                        "type": "string"
                                    },
                                    "Unit": {
                                        "description": "The unit to use for the returned data points.",
                                        "enum": [
                                            "Seconds",
                                            "Microseconds",
                                            "Milliseconds",
                                            "Bytes",
                                            "Kilobytes",
                                            "Megabytes",
                                            "Gigabytes",
                                            "Terabytes",
                                            "Bits",
                                            "Kilobits",
                                            "Megabits",
                                            "Gigabits",
                                            "Terabits",
                                            "Percent",
                                            "Count",
                                            "Bytes/Second",
                                            "Kilobytes/Second",
                                            "Megabytes/Second",
                                            "Gigabytes/Second",
                                            "Terabytes/Second",
                                            "Bits/Second",
                                            "Kilobits/Second",
                                            "Megabits/Second",
                                            "Gigabits/Second",
                                            "Terabits/Second",
                                            "Count/Second",
                                            "None"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Metric",
                                    "Period",
                                    "Stat"
                                ],
                                "type": "object"
                            },
                            "ReturnData": {
                                "description": "<p>When used in <code>GetMetricData</code>, this option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify <code>False</code>. If you omit this, the default of <code>True</code> is used.</p> <p>When used in <code>PutMetricAlarm</code>, specify <code>True</code> for the one expression result to use as the alarm. For all other metrics and expressions in the same <code>PutMetricAlarm</code> operation, specify <code>ReturnData</code> as False.</p>",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "Id"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "Namespace": {
                    "description": "The namespace for the metric associated specified in <code>MetricName</code>.",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^:].*",
                    "type": "string"
                },
                "OKActions": {
                    "description": "<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>",
                    "items": {
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 5,
                    "type": "array"
                },
                "Period": {
                    "description": "<p>The length, in seconds, used each time the metric specified in <code>MetricName</code> is evaluated. Valid values are 10, 30, and any multiple of 60.</p> <p>Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see <a href=\"https://aws.amazon.com/cloudwatch/pricing/\">Amazon CloudWatch Pricing</a>.</p> <p>An alarm's total current evaluation period can be no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>",
                    "minimum": 1,
                    "type": "integer"
                },
                "Statistic": {
                    "description": "The statistic for the metric specified in <code>MetricName</code>, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.",
                    "enum": [
                        "SampleCount",
                        "Average",
                        "Sum",
                        "Minimum",
                        "Maximum"
                    ],
                    "type": "string"
                },
                "Threshold": {
                    "description": "The value against which the specified statistic is compared.",
                    "format": "double",
                    "type": "number"
                },
                "TreatMissingData": {
                    "description": "<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data\">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>",
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string"
                },
                "Unit": {
                    "description": "<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you specify a unit, you must use a unit that is appropriate for the metric. Otherwise, the CloudWatch alarm can get stuck in the <code>INSUFFICIENT DATA</code> state. </p>",
                    "enum": [
                        "Seconds",
                        "Microseconds",
                        "Milliseconds",
                        "Bytes",
                        "Kilobytes",
                        "Megabytes",
                        "Gigabytes",
                        "Terabytes",
                        "Bits",
                        "Kilobits",
                        "Megabits",
                        "Gigabits",
                        "Terabits",
                        "Percent",
                        "Count",
                        "Bytes/Second",
                        "Kilobytes/Second",
                        "Megabytes/Second",
                        "Gigabytes/Second",
                        "Terabytes/Second",
                        "Bits/Second",
                        "Kilobits/Second",
                        "Megabits/Second",
                        "Gigabits/Second",
                        "Terabits/Second",
                        "Count/Second",
                        "None"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "AlarmName",
                "EvaluationPeriods",
                "Threshold",
                "ComparisonOperator"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}